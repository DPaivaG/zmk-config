// Arquivo: config/scotto9.keymap

// Importa as definições padrão de teclas e comportamentos
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h> // Importa comandos Bluetooth

// --- Configuração do Encoder ---
// Você não precisa mexer aqui, o "shield" scotto9 geralmente cuida disso,
// mas é bom ter para garantir.
/ {
    sensors {
        compatible = "zmk,keypad-sensors";
        sensors = <&encoder_1>;
    };
};

encoder_1: encoder_1 {
    compatible = "alps,ec11";
    label = "ENCODER_1";
    // Pinos padrão do Pro Micro/Nice!Nano. O shield scotto9 já mapeia isso.
    a-gpios = <&pro_micro 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; 
    b-gpios = <&pro_micro 8 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>;
    steps = <2>;
};
// --- Fim da Configuração do Encoder ---


// --- KEYMAP: ONDE A MÁGICA ACONTECE ---
/ {
    keymap {
        compatible = "zmk,keymap";

        // --- Camada 0: Padrão (Numpad) ---
        default_layer {
            // A ordem das teclas é como você lê um livro:
            // Linha 1 (teclas 1, 2, 3)
            // Linha 2 (teclas 4, 5, 6)
            // Linha 3 (teclas 7, 8, 9)
            bindings = <
                &kp N7    &kp N8    &kp N9      // Tecla 1=Num7, Tecla 2=Num8, Tecla 3=Num9
                &kp N4    &kp N5    &kp N6      // Tecla 4=Num4, Tecla 5=Num5, Tecla 6=Num6
                &kp N1    &kp N2    &kp N3      // Tecla 7=Num1, Tecla 8=Num2, Tecla 9=Num3
            >;

            // O que o encoder faz nesta camada
            sensor-bindings = <
                // Girar: Aumenta/Diminui Volume
                &inc_dec_kp C_VOL_UP C_VOL_DN  
            >;
        };

        // --- Camada 1: Funções (Exemplo) ---
        // Você pode adicionar quantas camadas quiser
        layer_1 {
            bindings = <
                &kp F7    &kp F8    &kp F9      // Teclas F7, F8, F9
                &kp F4    &kp F5    &kp F6      // Teclas F4, F5, F6
                &bt BT_CLR  &kp F2    &kp F3      // Limpar pareamento BT, F2, F3
            >;

            sensor-bindings = <
                // Girar: Próxima/Anterior música
                &inc_dec_kp C_NEXT C_PREV
            >;
        };
    }; // Fim do keymap

    // --- Comportamentos: Como as teclas funcionam ---
    behaviors {
        // Define o clique do encoder como um botão normal
        encoder_press: encoder_press {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_PRESS";
            sensors = <&encoder_1>;
            // O que ele faz: Mute
            bindings = <&kp C_MUTE>;
        };

        // Cria um "Momentary Layer" (MO)
        // "Segure para ativar a Camada 1"
        LH: layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD_1";
            #binding-cells = <2>;
            tapping-term-ms = <200>; // 200ms para diferenciar toque de segurar
            bindings = <&mo>, <&kp>; // <Segurar>, <Tocar>

            // Exemplo de uso: &LH 1 F1
            // Se segurar: Ativa camada 1
            // Se tocar rápido: Envia F1
        };
    };
};
